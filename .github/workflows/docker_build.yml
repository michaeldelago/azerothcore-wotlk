name: docker-build
on:
  push:
    branches:
      - 'master'
  pull_request:
    types: ['labeled', 'opened', 'synchronize', 'reopened']

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

jobs:
  docker-build-n-deploy-dev:
    runs-on: ubuntu-latest
    if: |
      github.repository == 'azerothcore/azerothcore-wotlk'
      && !github.event.pull_request.draft
      && (github.ref_name == github.event.repository.default_branch || contains(github.event.pull_request.labels.*.name, 'run-build') || github.event.label.name == 'run-build')
    env:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
    steps:
      - name: Configure
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          docker --version
          docker compose version

      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        if: github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name == github.event.repository.default_branch
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Acore version
        id: version
        run: |
          OUTPUT="$(./acore.sh version | grep "AzerothCore Rev. ")"
          VERSION="${output#"AzerothCore Rev. "}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build dev server
        if: github.repository == 'azerothcore/azerothcore-wotlk'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name = github.events.repository.default_branch }}
          tags: acore/ac-wotlk-dev-server:${DOCKER_IMAGE_TAG:-master}
          file: .devcontainer/Dockerfile
          cache-to: type=gha,mode=max
          cache-from: type=gha

      - name: Build dbimport
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name = github.events.repository.default_branch }}
          tags: acore/ac-wotlk-dbimport:${DOCKER_IMAGE_TAG:-master}
          target: dbimport
          cache-to: type=gha,mode=max
          cache-from: type=gha

      - name: Build authserver
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name = github.events.repository.default_branch }}
          tags: acore/ac-wotlk-authserver:${DOCKER_IMAGE_TAG:-master}
          target: authserver
          cache-to: type=gha,mode=max
          cache-from: type=gha


      - name: Build worldserver
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name = github.events.repository.default_branch }}
          tags: acore/ac-wotlk-worldserver:${DOCKER_IMAGE_TAG:-master}
          target: worldserver
          cache-to: type=gha,mode=max
          cache-from: type=gha

  dispatch-acore-docker:
    needs: [ docker-build]
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Repository Dispatch
        if: github.repository == 'azerothcore/azerothcore-wotlk' && steps.extract_branch.outputs.branch == github.ref_name
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.ACORE_DOCKER_REPO_ACCESS_TOKEN }}
          repository: azerothcore/acore-docker
          event-type: azerothcore-new-images
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
